"use strict";define("VC/Common",["require","exports","VSS/Platform/Context","VSS/Platform/Feature","VSS/Platform/Location","VSS/Core/Util/String","react","VSS/Legacy/Legacy","VSS/Core/Observable","VSS/Platform/RestClientBase","VSS/Platform/Util/Serialization","Favorites/Common/FavoritePickerProvider","VSS/Platform/FPS","VSSUI/Utilities/Date","OfficeFabric/Utilities","VSS/Platform/Layout","VSSUI/PickList","VSS/Features/Frame/CommandBar"],function(n,t,i,r,u,f,e,o,s,h,c,l,a,v,y,p,w,b){var k,g,st,ht,ut,ct,lt,at,vt,d,nt,ft,yt,pt,wt,tt,it,et,rt,bt,kt,ot,dt,gt,ni,ti;(function(n){k=t[n]={};Object.defineProperty(t,"__esModule",{value:!0});t[n].VersionDropdown_PivotBranches="Branches";t[n].VersionDropdown_PivotTags="Tags";t[n].VersionDropdown_PivotCommits="Commits";t[n].VersionDropdown_MineBranches="Mine";t[n].VersionDropdown_AllBranches="All";t[n].VersionDropdown_TagsNoItemsText="No tags in this repository";t[n].VersionDropdown_BranchesSearchTextPlaceholder="Filter branches";t[n].VersionDropdown_TagsSearchTextPlaceholder="Filter tags";t[n].VersionDropdown_CommitsSearchTextPlaceholder="Search commits";t[n].VersionDropdown_BranchesSearchNoResultsText="No branches matched '{0}'";t[n].VersionDropdown_TagsSearchNoResultsText="No tags matched '{0}'";t[n].VersionDropdown_CommitsSearchNoResultsText="No commits matched '{0}'";t[n].VersionDropdown_CommitsSearchMinimumCharactersError="Enter first 4 characters of a commit ID";t[n].VersionDropdown_CommitsSearchWrongCharactersError="Commit IDs must be hex digits (0-9 and a-f)";t[n].VersionDropdown_NewBranch="New branch";t[n].VersionDropdown_DefaultBadge="Default";t[n].ManageRepositories="Manage repositories";t[n].SearchRepositoriesWatermark="Filter repositories";t[n].ImportRepository="Import repository";t[n].NewRepository="New repository";t[n].NewPullRequest="New pull request"})("Resources"),function(n){g=t[n]={};Object.defineProperty(t,"__esModule",{value:!0});var i;(function(n){n.GitSecurityNamespaceId="2e9eb7ed-3c0a-47d4-87c1-0ffdd275fd87";n.SecurableRoot="repoV2/";n.GitToolName="Git"})(i=t[n].GitConstants||(t[n].GitConstants={}));t[n].VersionControlArea="VersionControl"}("ContractsConstants"),function(n){function i(n){switch(n){case 2:return"Abandoned";case 4:return"All";case 3:return"Completed";default:return"Active"}}st=t[n]={};Object.defineProperty(t,"__esModule",{value:!0});t[n].pullRequestStatusToString=i}("ContractsEnumToString"),function(n){var e,o,s;ht=t[n]={};Object.defineProperty(t,"__esModule",{value:!0}),function(n){n.Branches="ms.vss-code-web.branches-route";n.Changeset="ms.vss-code-web.changeset-route";n.Commit="ms.vss-code-web.commit-route";n.Commits="ms.vss-code-web.commits-route";n.Shelveset="ms.vss-code-web.shelveset-route";n.TfvcFiles="ms.vss-code-web.files-route-tfvc";n.GitFiles="ms.vss-code-web.files-route-git";n.Pushes="ms.vss-code-web.pushes-route";n.Tags="ms.vss-code-web.tags-route";n.PullRequests="ms.vss-code-web.pull-request-list-route";n.PullRequest="ms.vss-code-web.pull-request-review-route";n.MyPullRequests="ms.vss-code-web.my-pullrequests-me-page-route";n.GitOverview="ms.vss-code-web.repository-overview-git-route";n.TfvcOverview="ms.vss-code-web.repository-overview-tfvc-route"}(e=t[n].RouteIds||(t[n].RouteIds={}));o={"ms.vss-code-web.git-repository-overview":e.GitOverview,"ms.vss-code-web.files-hub-git":e.GitFiles,"ms.vss-code-web.branches-hub":e.Branches,"ms.vss-code-web.tags-hub":e.Tags,"ms.vss-code-web.pushes-hub":e.Pushes,"ms.vss-code-web.commits-hub":e.Commits,"ms.vss-code-web.pull-request-hub":e.PullRequests};s=function(n){function t(){return n!==null&&n.apply(this,arguments)||this}return __extends(t,n),t.prototype.getData=function(){var n=this.pageContext.getService("IVssContributionService");return n.getData("ms.vss-code-web.navigation-data-provider")},t.prototype.getTfvcCommitUrl=function(n,t,i){var r={},f;return this._addDefaultRoutes(r,t,i),f="",n.startsWith("C")?(f=e.Changeset,r.parameters=encodeURIComponent(n.substring(1))):(f=e.Shelveset,r.ss=n),u.routeUrl(this.pageContext,f,r)},t.prototype.getGitCommitUrl=function(n,t,i,r){var f={};return this._addDefaultRoutes(f,i,r),t&&(f["vc.GitRepositoryName"]=t),f.parameters=encodeURIComponent(n),u.routeUrl(this.pageContext,e.Commit,f)},t.prototype.getRepositoryUrl=function(n,t,i,r,f){var h,c,s;return r||(n?(h=this.pageContext.getService("IVssNavigationService"),c=h.getDisplayedNavigation()[3],r=o[c]||e.GitFiles):r=e.TfvcFiles),s={},this._addDefaultRoutes(s,t,i),n&&(s["vc.GitRepositoryName"]=n),f&&(s=__assign({},f,s)),u.routeUrl(this.pageContext,r,s)},t.prototype.getPullRequestUrl=function(n,t,i){var r={};return this._addDefaultRoutes(r,i,null),t&&(r["vc.GitRepositoryName"]=t),r.parameters=n.toString(),u.routeUrl(this.pageContext,e.PullRequest,r)},t.prototype.getRefUrl=function(n,t,i,r){var s=e.GitFiles,f,o;return t||(s=e.TfvcFiles),f={},this._addDefaultRoutes(f,i,r),t&&(f["vc.GitRepositoryName"]=t),o="refs/heads/",n.indexOf(o)===0&&(f.version="GB"+n.substring(o.length)),u.routeUrl(this.pageContext,s,f)},t.prototype.getMyPullRequestsUrl=function(){return u.routeUrl(this.pageContext,e.MyPullRequests)},t.prototype._addDefaultRoutes=function(n,t,i){if(!t||!i){var o=this.pageContext.getService("ITfsPageService"),e=o.getData(),u=e&&e.project&&e.project.name;t===undefined&&u&&(t=u);var h=r.isFeatureEnabled(this.pageContext,"ms.vss-tfs-web.vertical-navigation",!1),s=h?null:o.getHorizontalNavigationTeamData(),c=t&&u&&f.equals(t,u,!0);i===undefined&&s&&c&&(i=s.name)}t&&(n.project=t);i&&(n.team=i)},t}(i.VssService);i.Services.add("IVCNavigationService",{serviceFactory:s})}("Navigation"),function(n){var i,u;ut=t[n]={};Object.defineProperty(t,"__esModule",{value:!0}),function(n){function t(n){return n.substring(n.indexOf("/",n.indexOf("/")+1)+1)}function i(n){return n.substring(0,n.lastIndexOf("/"))}function r(n){return n.substring(n.lastIndexOf("/")+1)}n.getHeadRelativeName=t;n.getParentName=i;n.getShortName=r}(i=t[n].BranchName||(t[n].BranchName={})),function(n){function i(n){return r.isFeatureFlagEnabled(n,t,!1)}var t="WebAccess.RepositoryOverview.Enable";n.isRepositoryOverviewHubEnabled=i}(u=t[n].FeatureFlags||(t[n].FeatureFlags={}))}("Helpers"),function(n){ct=t[n]={};Object.defineProperty(t,"__esModule",{value:!0});var r=function(n){function t(){return n!==null&&n.apply(this,arguments)||this}return __extends(t,n),t.prototype.loadItems=function(n){var s=this,a=this.pageContext.getService("IVCNavigationService"),i=a.getData(),h,t,r,f,c,l;i&&(h=this.pageContext.getService("ITfsPageService"),t=h.getData(),t&&t.project&&(r={},r.project=t.project.name,f=[],i.defaultGitRepoName&&(i.defaultGitRepoName!==t.project.name&&(r["vc.GitRepositoryName"]=i.defaultGitRepoName),c={key:"vcNewPr",groupKey:"app-actions",iconProps:{iconName:"BranchPullRequest"},name:k.NewPullRequest,href:u.routeUrl(this.pageContext,"ms.vss-code-web.pull-request-create-route",r)},f.push(c)),l={key:"vcNewRepo",groupKey:"app-actions",name:k.NewRepository,onClick:function(){var n=s.pageContext.getService("IVssLayoutManager");n.renderCallout(function(n){return e.createElement(o.LegacyComponent,{modules:["VersionControl/Scripts/Components/HeaderComponents/HeaderComponents"],wrappedType:"newRepositoryDialog",onClose:function(){n()},isOverviewHubEnabled:ut.FeatureFlags.isRepositoryOverviewHubEnabled(s.pageContext)},null)})}},f.push(l),n(f)))},t}(i.VssService);i.Services.add("code-create-menu-provider",{serviceFactory:r})}("CreateMenuProvider"),function(n){lt=t[n]={};Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function n(){this._listeners=[]}return n.prototype.invoke=function(t){if(n.s_executing)throw new Error("Cannot invoke an action from inside another action.");n.s_executing=!0;try{this._listeners.forEach(function(n){n(t)})}finally{n.s_executing=!1}},n.prototype.addListener=function(n,t){var i=t?n.bind(t):n;return this._listeners.push(i),i},n.prototype.removeListener=function(n){var t=this._listeners.indexOf(n);t>=0&&this._listeners.splice(t,1)},n.s_executing=!1,n}();t[n].Action=i}("FluxAction"),function(n){at=t[n]={};Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function n(){this.observable=new s.Observable}return n.prototype.subscribe=function(n){this.observable.subscribe(n,undefined)},n.prototype.unsubscribe=function(n){this.observable.unsubscribe(n,undefined)},n.prototype._emitChanged=function(){this.observable.notify(undefined,"emitChanged")},n}();t[n].Store=i}("FluxStore"),function(n){vt=t[n]={};Object.defineProperty(t,"__esModule",{value:!0});var r=function(n){function t(t){return n.call(this,t)||this}return __extends(t,n),t.prototype.createAnnotatedTag=function(n,t,i){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/annotatedTags/{objectId}",routeValues:{project:t,repositoryId:i},body:n})]})})},t.prototype.getAnnotatedTag=function(n,t,i){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/annotatedTags/{objectId}",routeValues:{project:n,repositoryId:t,objectId:i}})]})})},t.prototype.getBlob=function(n,t,i,r,u,f){return __awaiter(this,void 0,void 0,function(){var e;return __generator(this,function(){return e={download:r,fileName:u,resolveLfs:f},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/Blobs/{sha1}",routeValues:{project:i,repositoryId:n,sha1:t},queryParams:e})]})})},t.prototype.getBlobContent=function(n,t,i,r,u,f){return __awaiter(this,void 0,void 0,function(){var e;return __generator(this,function(){return e={download:r,fileName:u,resolveLfs:f},[2,this.beginRequest({apiVersion:"5.0-preview.1",httpResponseType:"application/octet-stream",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/Blobs/{sha1}",routeValues:{project:i,repositoryId:n,sha1:t},queryParams:e})]})})},t.prototype.getBlobsZip=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){var u;return __generator(this,function(){return u={filename:r},[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",httpResponseType:"application/zip",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/Blobs/{sha1}",routeValues:{project:i,repositoryId:t},queryParams:u,body:n})]})})},t.prototype.getBlobZip=function(n,t,i,r,u,f){return __awaiter(this,void 0,void 0,function(){var e;return __generator(this,function(){return e={download:r,fileName:u,resolveLfs:f},[2,this.beginRequest({apiVersion:"5.0-preview.1",httpResponseType:"application/zip",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/Blobs/{sha1}",routeValues:{project:i,repositoryId:n,sha1:t},queryParams:e})]})})},t.prototype.getBranch=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){var u;return __generator(this,function(){return u={name:t,baseVersionDescriptor:r},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/stats/branches",routeValues:{project:i,repositoryId:n},queryParams:u})]})})},t.prototype.getBranches=function(n,t,i){return __awaiter(this,void 0,void 0,function(){var r;return __generator(this,function(){return r={baseVersionDescriptor:i},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/stats/branches",routeValues:{project:t,repositoryId:n},queryParams:r})]})})},t.prototype.getBranchStatsBatch=function(n,t,i){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/stats/branches",routeValues:{project:i,repositoryId:t},body:n})]})})},t.prototype.getChanges=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){var f;return __generator(this,function(){return f={top:r,skip:u},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/commits/{commitId}/Changes",routeValues:{project:i,commitId:n,repositoryId:t},queryParams:f})]})})},t.prototype.getCherryPickRelationships=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){var u;return __generator(this,function(){return u={includeLinks:r},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryNameOrId}/cherryPickRelationships/{commitId}",routeValues:{project:i,repositoryNameOrId:n,commitId:t},queryParams:u})]})})},t.prototype.createCherryPick=function(n,t,i){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/cherryPicks/{cherryPickId}",routeValues:{project:t,repositoryId:i},body:n})]})})},t.prototype.getCherryPick=function(n,t,i){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/cherryPicks/{cherryPickId}",routeValues:{project:n,cherryPickId:t,repositoryId:i}})]})})},t.prototype.getCherryPickForRefName=function(n,t,i){return __awaiter(this,void 0,void 0,function(){var r;return __generator(this,function(){return r={refName:i},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/cherryPicks/{cherryPickId}",routeValues:{project:n,repositoryId:t},queryParams:r})]})})},t.prototype.getCommitDiffs=function(n,t,i,r,u,f,e){return __awaiter(this,void 0,void 0,function(){var o;return __generator(this,function(){return o={diffCommonCommit:i,$top:r,$skip:u,baseVersionDescriptor:f,targetVersionDescriptor:e},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/diffs/commits",routeValues:{project:t,repositoryId:n},queryParams:o})]})})},t.prototype.getCommit=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){var u;return __generator(this,function(){return u={changeCount:r},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/Commits/{commitId}",routeValues:{project:i,commitId:n,repositoryId:t},queryParams:u})]})})},t.prototype.getCommits=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){var f;return __generator(this,function(){return f={searchCriteria:t,$skip:r,$top:u},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/Commits/{commitId}",routeValues:{project:i,repositoryId:n},queryParams:f})]})})},t.prototype.getPushCommits=function(n,t,i,r,u,f){return __awaiter(this,void 0,void 0,function(){var e;return __generator(this,function(){return e={pushId:t,top:r,skip:u,includeLinks:f},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/Commits/{commitId}",routeValues:{project:i,repositoryId:n},queryParams:e})]})})},t.prototype.getCommitsBatch=function(n,t,i,r,u,f){return __awaiter(this,void 0,void 0,function(){var e;return __generator(this,function(){return e={$skip:r,$top:u,includeStatuses:f},[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/CommitsBatch",routeValues:{project:i,repositoryId:t},queryParams:e,body:n})]})})},t.prototype.getDeletedRepositories=function(n){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/DeletedRepositories",routeValues:{project:n}})]})})},t.prototype.getFileDiffs=function(n,t,i){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/FileDiffs",routeValues:{project:t,repositoryId:i},body:n})]})})},t.prototype.getForks=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){var u;return __generator(this,function(){return u={includeLinks:r},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryNameOrId}/forks/{collectionId}",routeValues:{project:i,repositoryNameOrId:n,collectionId:t},queryParams:u})]})})},t.prototype.createForkSyncRequest=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){var u;return __generator(this,function(){return u={includeLinks:r},[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/repositories/{repositoryNameOrId}/forkSyncRequests/{forkSyncOperationId}",routeValues:{project:i,repositoryNameOrId:t},queryParams:u,body:n})]})})},t.prototype.getForkSyncRequest=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){var u;return __generator(this,function(){return u={includeLinks:r},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryNameOrId}/forkSyncRequests/{forkSyncOperationId}",routeValues:{project:i,repositoryNameOrId:n,forkSyncOperationId:t},queryParams:u})]})})},t.prototype.getForkSyncRequests=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){var u;return __generator(this,function(){return u={includeAbandoned:i,includeLinks:r},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryNameOrId}/forkSyncRequests/{forkSyncOperationId}",routeValues:{project:t,repositoryNameOrId:n},queryParams:u})]})})},t.prototype.createImportRequest=function(n,t,i){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/importRequests/{importRequestId}",routeValues:{project:t,repositoryId:i},body:n})]})})},t.prototype.getImportRequest=function(n,t,i){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/importRequests/{importRequestId}",routeValues:{project:n,repositoryId:t,importRequestId:i}})]})})},t.prototype.queryImportRequests=function(n,t,i){return __awaiter(this,void 0,void 0,function(){var r;return __generator(this,function(){return r={includeAbandoned:i},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/importRequests/{importRequestId}",routeValues:{project:n,repositoryId:t},queryParams:r})]})})},t.prototype.updateImportRequest=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/importRequests/{importRequestId}",routeValues:{project:t,repositoryId:i,importRequestId:r},body:n})]})})},t.prototype.getItem=function(n,t,i,r,u,f,e,o,s,h,c){return __awaiter(this,void 0,void 0,function(){var l;return __generator(this,function(){return l={path:t,scopePath:r,recursionLevel:u,includeContentMetadata:f,latestProcessedChange:e,download:o,versionDescriptor:s,includeContent:h,resolveLfs:c},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/Items/{*path}",routeValues:{project:i,repositoryId:n},queryParams:l})]})})},t.prototype.getItemContent=function(n,t,i,r,u,f,e,o,s,h,c){return __awaiter(this,void 0,void 0,function(){var l;return __generator(this,function(){return l={path:t,scopePath:r,recursionLevel:u,includeContentMetadata:f,latestProcessedChange:e,download:o,versionDescriptor:s,includeContent:h,resolveLfs:c},[2,this.beginRequest({apiVersion:"5.0-preview.1",httpResponseType:"application/octet-stream",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/Items/{*path}",routeValues:{project:i,repositoryId:n},queryParams:l})]})})},t.prototype.getItems=function(n,t,i,r,u,f,e,o,s){return __awaiter(this,void 0,void 0,function(){var h;return __generator(this,function(){return h={scopePath:i,recursionLevel:r,includeContentMetadata:u,latestProcessedChange:f,download:e,includeLinks:o,versionDescriptor:s},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/Items/{*path}",routeValues:{project:t,repositoryId:n},queryParams:h})]})})},t.prototype.getItemText=function(n,t,i,r,u,f,e,o,s,h,c){return __awaiter(this,void 0,void 0,function(){var l;return __generator(this,function(){return l={path:t,scopePath:r,recursionLevel:u,includeContentMetadata:f,latestProcessedChange:e,download:o,versionDescriptor:s,includeContent:h,resolveLfs:c},[2,this.beginRequest({apiVersion:"5.0-preview.1",httpResponseType:"text/plain",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/Items/{*path}",routeValues:{project:i,repositoryId:n},queryParams:l})]})})},t.prototype.getItemZip=function(n,t,i,r,u,f,e,o,s,h,c){return __awaiter(this,void 0,void 0,function(){var l;return __generator(this,function(){return l={path:t,scopePath:r,recursionLevel:u,includeContentMetadata:f,latestProcessedChange:e,download:o,versionDescriptor:s,includeContent:h,resolveLfs:c},[2,this.beginRequest({apiVersion:"5.0-preview.1",httpResponseType:"application/zip",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/Items/{*path}",routeValues:{project:i,repositoryId:n},queryParams:l})]})})},t.prototype.getItemsBatch=function(n,t,i){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/ItemsBatch",routeValues:{project:i,repositoryId:t},body:n})]})})},t.prototype.getMergeBases=function(n,t,i,r,u,f){return __awaiter(this,void 0,void 0,function(){var e;return __generator(this,function(){return e={otherCommitId:i,otherCollectionId:u,otherRepositoryId:f},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryNameOrId}/commits/{commitId}/mergeBases",routeValues:{project:r,repositoryNameOrId:n,commitId:t},queryParams:e})]})})},t.prototype.createAttachment=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/attachments/{fileName}",routeValues:{project:u,fileName:t,repositoryId:i,pullRequestId:r},customHeaders:{"Content-Type":"application/octet-stream"},body:n,isRawData:!0})]})})},t.prototype.deleteAttachment=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/attachments/{fileName}",routeValues:{project:r,fileName:n,repositoryId:t,pullRequestId:i}})]})})},t.prototype.getAttachmentContent=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",httpResponseType:"application/octet-stream",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/attachments/{fileName}",routeValues:{project:r,fileName:n,repositoryId:t,pullRequestId:i}})]})})},t.prototype.getAttachments=function(n,t,i){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/attachments/{fileName}",routeValues:{project:i,repositoryId:n,pullRequestId:t}})]})})},t.prototype.getAttachmentZip=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",httpResponseType:"application/zip",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/attachments/{fileName}",routeValues:{project:r,fileName:n,repositoryId:t,pullRequestId:i}})]})})},t.prototype.createLike=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}/likes",routeValues:{project:u,repositoryId:n,pullRequestId:t,threadId:i,commentId:r}})]})})},t.prototype.deleteLike=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}/likes",routeValues:{project:u,repositoryId:n,pullRequestId:t,threadId:i,commentId:r}})]})})},t.prototype.getLikes=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}/likes",routeValues:{project:u,repositoryId:n,pullRequestId:t,threadId:i,commentId:r}})]})})},t.prototype.getPullRequestIterationCommits=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/commits",routeValues:{project:r,repositoryId:n,pullRequestId:t,iterationId:i}})]})})},t.prototype.getPullRequestCommits=function(n,t,i){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/commits",routeValues:{project:i,repositoryId:n,pullRequestId:t}})]})})},t.prototype.getPullRequestConflict=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/conflicts/{conflictId}",routeValues:{project:r,repositoryId:n,pullRequestId:t,conflictId:i}})]})})},t.prototype.getPullRequestConflicts=function(n,t,i,r,u,f,e,o){return __awaiter(this,void 0,void 0,function(){var s;return __generator(this,function(){return s={$skip:r,$top:u,includeObsolete:f,excludeResolved:e,onlyResolved:o},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/conflicts/{conflictId}",routeValues:{project:i,repositoryId:n,pullRequestId:t},queryParams:s})]})})},t.prototype.updatePullRequestConflict=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/conflicts/{conflictId}",routeValues:{project:u,repositoryId:t,pullRequestId:i,conflictId:r},body:n})]})})},t.prototype.updatePullRequestConflicts=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/conflicts/{conflictId}",routeValues:{project:r,repositoryId:t,pullRequestId:i},body:n})]})})},t.prototype.getPullRequestIterationChanges=function(n,t,i,r,u,f,e){return __awaiter(this,void 0,void 0,function(){var o;return __generator(this,function(){return o={$top:u,$skip:f,$compareTo:e},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/changes",routeValues:{project:r,repositoryId:n,pullRequestId:t,iterationId:i},queryParams:o})]})})},t.prototype.getPullRequestIteration=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}",routeValues:{project:r,repositoryId:n,pullRequestId:t,iterationId:i}})]})})},t.prototype.getPullRequestIterations=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){var u;return __generator(this,function(){return u={includeCommits:r},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}",routeValues:{project:i,repositoryId:n,pullRequestId:t},queryParams:u})]})})},t.prototype.createPullRequestIterationStatus=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/statuses/{statusId}",routeValues:{project:u,repositoryId:t,pullRequestId:i,iterationId:r},body:n})]})})},t.prototype.deletePullRequestIterationStatus=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/statuses/{statusId}",routeValues:{project:u,repositoryId:n,pullRequestId:t,iterationId:i,statusId:r}})]})})},t.prototype.getPullRequestIterationStatus=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/statuses/{statusId}",routeValues:{project:u,repositoryId:n,pullRequestId:t,iterationId:i,statusId:r}})]})})},t.prototype.getPullRequestIterationStatuses=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/statuses/{statusId}",routeValues:{project:r,repositoryId:n,pullRequestId:t,iterationId:i}})]})})},t.prototype.updatePullRequestIterationStatuses=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/iterations/{iterationId}/statuses/{statusId}",routeValues:{project:u,repositoryId:t,pullRequestId:i,iterationId:r},customHeaders:{"Content-Type":"application/json-patch+json"},body:n})]})})},t.prototype.createPullRequestLabel=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){var f;return __generator(this,function(){return f={projectId:u},[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/labels/{labelIdOrName}",routeValues:{project:r,repositoryId:t,pullRequestId:i},queryParams:f,body:n})]})})},t.prototype.deletePullRequestLabels=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){var f;return __generator(this,function(){return f={projectId:u},[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/labels/{labelIdOrName}",routeValues:{project:r,repositoryId:n,pullRequestId:t,labelIdOrName:i},queryParams:f})]})})},t.prototype.getPullRequestLabel=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){var f;return __generator(this,function(){return f={projectId:u},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/labels/{labelIdOrName}",routeValues:{project:r,repositoryId:n,pullRequestId:t,labelIdOrName:i},queryParams:f})]})})},t.prototype.getPullRequestLabels=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){var u;return __generator(this,function(){return u={projectId:r},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/labels/{labelIdOrName}",routeValues:{project:i,repositoryId:n,pullRequestId:t},queryParams:u})]})})},t.prototype.getPullRequestProperties=function(n,t,i){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/properties",routeValues:{project:i,repositoryId:n,pullRequestId:t}})]})})},t.prototype.updatePullRequestProperties=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/properties",routeValues:{project:r,repositoryId:t,pullRequestId:i},customHeaders:{"Content-Type":"application/json-patch+json"},body:n})]})})},t.prototype.getPullRequestQuery=function(n,t,i){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/PullRequestQuery",routeValues:{project:i,repositoryId:t},body:n})]})})},t.prototype.createPullRequestReviewer=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"PUT",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers/{reviewerId}",routeValues:{project:u,repositoryId:t,pullRequestId:i,reviewerId:r},body:n})]})})},t.prototype.createPullRequestReviewers=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers/{reviewerId}",routeValues:{project:r,repositoryId:t,pullRequestId:i},body:n})]})})},t.prototype.deletePullRequestReviewer=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers/{reviewerId}",routeValues:{project:r,repositoryId:n,pullRequestId:t,reviewerId:i}})]})})},t.prototype.getPullRequestReviewer=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers/{reviewerId}",routeValues:{project:r,repositoryId:n,pullRequestId:t,reviewerId:i}})]})})},t.prototype.getPullRequestReviewers=function(n,t,i){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers/{reviewerId}",routeValues:{project:i,repositoryId:n,pullRequestId:t}})]})})},t.prototype.updatePullRequestReviewers=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/reviewers/{reviewerId}",routeValues:{project:r,repositoryId:t,pullRequestId:i},body:n})]})})},t.prototype.getPullRequestById=function(n,t){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/PullRequests/{pullRequestId}",routeValues:{project:t,pullRequestId:n}})]})})},t.prototype.getPullRequestsByProject=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){var f;return __generator(this,function(){return f={searchCriteria:t,maxCommentLength:i,$skip:r,$top:u},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/PullRequests",routeValues:{project:n},queryParams:f})]})})},t.prototype.createPullRequest=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){var u;return __generator(this,function(){return u={supportsIterations:r},[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/PullRequests/{pullRequestId}",routeValues:{project:i,repositoryId:t},queryParams:u,body:n})]})})},t.prototype.getPullRequest=function(n,t,i,r,u,f,e,o){return __awaiter(this,void 0,void 0,function(){var s;return __generator(this,function(){return s={maxCommentLength:r,$skip:u,$top:f,includeCommits:e,includeWorkItemRefs:o},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/PullRequests/{pullRequestId}",routeValues:{project:i,repositoryId:n,pullRequestId:t},queryParams:s})]})})},t.prototype.getPullRequests=function(n,t,i,r,u,f){return __awaiter(this,void 0,void 0,function(){var e;return __generator(this,function(){return e={searchCriteria:t,maxCommentLength:r,$skip:u,$top:f},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/PullRequests/{pullRequestId}",routeValues:{project:i,repositoryId:n},queryParams:e})]})})},t.prototype.updatePullRequest=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/PullRequests/{pullRequestId}",routeValues:{project:r,repositoryId:t,pullRequestId:i},body:n})]})})},t.prototype.sharePullRequest=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/share",routeValues:{project:r,repositoryId:t,pullRequestId:i},body:n})]})})},t.prototype.createPullRequestStatus=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/statuses/{statusId}",routeValues:{project:r,repositoryId:t,pullRequestId:i},body:n})]})})},t.prototype.deletePullRequestStatus=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/statuses/{statusId}",routeValues:{project:r,repositoryId:n,pullRequestId:t,statusId:i}})]})})},t.prototype.getPullRequestStatus=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/statuses/{statusId}",routeValues:{project:r,repositoryId:n,pullRequestId:t,statusId:i}})]})})},t.prototype.getPullRequestStatuses=function(n,t,i){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/statuses/{statusId}",routeValues:{project:i,repositoryId:n,pullRequestId:t}})]})})},t.prototype.updatePullRequestStatuses=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/statuses/{statusId}",routeValues:{project:r,repositoryId:t,pullRequestId:i},customHeaders:{"Content-Type":"application/json-patch+json"},body:n})]})})},t.prototype.createComment=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}",routeValues:{project:u,repositoryId:t,pullRequestId:i,threadId:r},body:n})]})})},t.prototype.deleteComment=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}",routeValues:{project:u,repositoryId:n,pullRequestId:t,threadId:i,commentId:r}})]})})},t.prototype.getComment=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}",routeValues:{project:u,repositoryId:n,pullRequestId:t,threadId:i,commentId:r}})]})})},t.prototype.getComments=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}",routeValues:{project:r,repositoryId:n,pullRequestId:t,threadId:i}})]})})},t.prototype.updateComment=function(n,t,i,r,u,f){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}/comments/{commentId}",routeValues:{project:f,repositoryId:t,pullRequestId:i,threadId:r,commentId:u},body:n})]})})},t.prototype.createThread=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}",routeValues:{project:r,repositoryId:t,pullRequestId:i},body:n})]})})},t.prototype.getPullRequestThread=function(n,t,i,r,u,f){return __awaiter(this,void 0,void 0,function(){var e;return __generator(this,function(){return e={$iteration:u,$baseIteration:f},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}",routeValues:{project:r,repositoryId:n,pullRequestId:t,threadId:i},queryParams:e})]})})},t.prototype.getThreads=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){var f;return __generator(this,function(){return f={$iteration:r,$baseIteration:u},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}",routeValues:{project:i,repositoryId:n,pullRequestId:t},queryParams:f})]})})},t.prototype.updateThread=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/threads/{threadId}",routeValues:{project:u,repositoryId:t,pullRequestId:i,threadId:r},body:n})]})})},t.prototype.getPullRequestWorkItemRefs=function(n,t,i){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pullRequests/{pullRequestId}/workitems",routeValues:{project:i,repositoryId:n,pullRequestId:t}})]})})},t.prototype.createPush=function(n,t,i){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.2",method:"POST",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pushes/{pushId}",routeValues:{project:i,repositoryId:t},body:n})]})})},t.prototype.getPush=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){var f;return __generator(this,function(){return f={includeCommits:r,includeRefUpdates:u},[2,this.beginRequest({apiVersion:"5.0-preview.2",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pushes/{pushId}",routeValues:{project:i,repositoryId:n,pushId:t},queryParams:f})]})})},t.prototype.getPushes=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){var f;return __generator(this,function(){return f={$skip:i,$top:r,searchCriteria:u},[2,this.beginRequest({apiVersion:"5.0-preview.2",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/pushes/{pushId}",routeValues:{project:t,repositoryId:n},queryParams:f})]})})},t.prototype.deleteRepositoryFromRecycleBin=function(n,t){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/git/recycleBin/repositories/{repositoryId}",routeValues:{project:n,repositoryId:t}})]})})},t.prototype.getRecycleBinRepositories=function(n){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/recycleBin/repositories/{repositoryId}",routeValues:{project:n}})]})})},t.prototype.restoreRepositoryFromRecycleBin=function(n,t,i){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/git/recycleBin/repositories/{repositoryId}",routeValues:{project:t,repositoryId:i},body:n})]})})},t.prototype.getRefs=function(n,t,i,r,u,f,e,o,s){return __awaiter(this,void 0,void 0,function(){var h;return __generator(this,function(){return h={filter:i,includeLinks:r,includeStatuses:u,includeMyBranches:f,latestStatusesOnly:e,peelTags:o,filterContains:s},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/refs/{*filter}",routeValues:{project:t,repositoryId:n},queryParams:h})]})})},t.prototype.updateRef=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){var f;return __generator(this,function(){return f={filter:i,projectId:u},[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/refs/{*filter}",routeValues:{project:r,repositoryId:t},queryParams:f,body:n})]})})},t.prototype.updateRefs=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){var u;return __generator(this,function(){return u={projectId:r},[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/refs/{*filter}",routeValues:{project:i,repositoryId:t},queryParams:u,body:n})]})})},t.prototype.createFavorite=function(n,t){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/favorites/refs/{favoriteId}",routeValues:{project:t},body:n})]})})},t.prototype.deleteRefFavorite=function(n,t){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/git/favorites/refs/{favoriteId}",routeValues:{project:n,favoriteId:t}})]})})},t.prototype.getRefFavorite=function(n,t){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/favorites/refs/{favoriteId}",routeValues:{project:n,favoriteId:t}})]})})},t.prototype.getRefFavorites=function(n,t,i){return __awaiter(this,void 0,void 0,function(){var r;return __generator(this,function(){return r={repositoryId:t,identityId:i},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/favorites/refs/{favoriteId}",routeValues:{project:n},queryParams:r})]})})},t.prototype.createRepository=function(n,t,i){return __awaiter(this,void 0,void 0,function(){var r;return __generator(this,function(){return r={sourceRef:i},[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/Repositories/{repositoryId}",routeValues:{project:t},queryParams:r,body:n})]})})},t.prototype.deleteRepository=function(n,t){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/git/Repositories/{repositoryId}",routeValues:{project:t,repositoryId:n}})]})})},t.prototype.getRepositories=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){var u;return __generator(this,function(){return u={includeLinks:t,includeAllUrls:i,includeHidden:r},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/Repositories/{repositoryId}",routeValues:{project:n},queryParams:u})]})})},t.prototype.getRepository=function(n,t){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/Repositories/{repositoryId}",routeValues:{project:t,repositoryId:n}})]})})},t.prototype.getRepositoryWithParent=function(n,t,i){return __awaiter(this,void 0,void 0,function(){var r;return __generator(this,function(){return r={includeParent:t},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/Repositories/{repositoryId}",routeValues:{project:i,repositoryId:n},queryParams:r})]})})},t.prototype.updateRepository=function(n,t,i){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/git/Repositories/{repositoryId}",routeValues:{project:i,repositoryId:t},body:n})]})})},t.prototype.createRevert=function(n,t,i){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/reverts/{revertId}",routeValues:{project:t,repositoryId:i},body:n})]})})},t.prototype.getRevert=function(n,t,i){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/reverts/{revertId}",routeValues:{project:n,revertId:t,repositoryId:i}})]})})},t.prototype.getRevertForRefName=function(n,t,i){return __awaiter(this,void 0,void 0,function(){var r;return __generator(this,function(){return r={refName:i},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/reverts/{revertId}",routeValues:{project:n,repositoryId:t},queryParams:r})]})})},t.prototype.createCommitStatus=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/commits/{commitId}/Statuses",routeValues:{project:r,commitId:t,repositoryId:i},body:n})]})})},t.prototype.getStatuses=function(n,t,i,r,u,f){return __awaiter(this,void 0,void 0,function(){var e;return __generator(this,function(){return e={top:r,skip:u,latestOnly:f},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/commits/{commitId}/Statuses",routeValues:{project:i,commitId:n,repositoryId:t},queryParams:e})]})})},t.prototype.getSuggestions=function(n,t){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/suggestions",routeValues:{project:t,repositoryId:n}})]})})},t.prototype.getTreeDiffs=function(n,t,i,r,u,f){return __awaiter(this,void 0,void 0,function(){var e;return __generator(this,function(){return e={baseId:i,targetId:r,$top:u,continuationToken:f},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/diffs/trees",routeValues:{project:n,repositoryId:t},queryParams:e})]})})},t.prototype.getTree=function(n,t,i,r,u,f){return __awaiter(this,void 0,void 0,function(){var e;return __generator(this,function(){return e={projectId:r,recursive:u,fileName:f},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/Trees/{sha1}",routeValues:{project:i,repositoryId:n,sha1:t},queryParams:e})]})})},t.prototype.getTreeZip=function(n,t,i,r,u,f){return __awaiter(this,void 0,void 0,function(){var e;return __generator(this,function(){return e={projectId:r,recursive:u,fileName:f},[2,this.beginRequest({apiVersion:"5.0-preview.1",httpResponseType:"application/zip",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/Trees/{sha1}",routeValues:{project:i,repositoryId:n,sha1:t},queryParams:e})]})})},t}(h.RestClientBase);i.RestClients.add("IGitRestClient",{factory:r,options:{serviceInstanceType:"00025394-6065-48ca-87d9-7f5672854ef7"}})}("RestClientGit"),function(n){function e(n){return u(n)?n.substr(i.length):f(n)?n.substr(r.length):n}function o(n){return i+n}function s(n){return r+n}function u(n){return(n||"").indexOf(i)===0}function f(n){return(n||"").indexOf(r)===0}function h(n){return"GB"+n}function c(n){return"GT"+n}function l(n){return"GC"+n}function a(n){return n.substring(0,8)}d=t[n]={};Object.defineProperty(t,"__esModule",{value:!0});var i="refs/heads/",r="refs/tags/";t[n].getFriendlyName=e;t[n].getRefNameFromBranchName=o;t[n].getRefNameFromTagName=s;t[n].isBranch=u;t[n].isTag=f;t[n].getVersionFromBranchName=h;t[n].getVersionFromTagName=c;t[n].getVersionFromCommitHash=l;t[n].getShortCommitId=a}("UtilsRef"),function(n){function f(n){return{id:n.id.toString(),artifactId:n.name,artifactName:d.getFriendlyName(n.name),artifactScope:{id:n.repositoryId,type:i.artifactScopeType},artifactType:i.artifactType}}function e(n){return{id:n.id&&parseInt(n.id),name:n.artifactId,repositoryId:n.artifactScope.id,type:2}}var i,r,u;nt=t[n]={};Object.defineProperty(t,"__esModule",{value:!0}),function(n){n.artifactType="Microsoft.TeamFoundation.Git.GitRefFavorite";n.artifactScopeType="Repository"}(i=t[n].GitRefFavoriteArtifactConstants||(t[n].GitRefFavoriteArtifactConstants={}));r=function(n){function t(){return n!==null&&n.apply(this,arguments)||this}return __extends(t,n),t.prototype.dispose=function(){},t}(s.ObservableArray);u=function(){function n(n,t,i){this.gitRestClient=n;this.canFavorites=t;this.projectId=i;this._favoritesCollection=new r([])}return n.prototype.canUseFavorites=function(){return this.canFavorites},n.prototype.canFetchExtendedDetails=function(){return!1},n.prototype.getFavorites=function(n,t,u){return __awaiter(this,void 0,void 0,function(){var e=this;return __generator(this,function(){if(n!==i.artifactType)throw new Error("Type "+n+" not valid. GitRefFavoritesService only supports "+i.artifactType+".");if(t!==i.artifactScopeType)throw new Error("Scope "+t+" not valid. GitRefFavoritesService only supports "+i.artifactScopeType+".");return this._favoritesPromise||(this._favoritesPromise=this.gitRestClient.getRefFavorites(this.projectId,u)),[2,this._favoritesPromise.then(function(n){return e._favoritesCollection=new r(n.filter(function(n){return n.type===2}).map(f)),e._favoritesCollection})]})})},n.prototype.getCurrentFolderFavorites=function(){if(!this._favoritesPromise)throw new Error("Favorites not loading yet.");return this._favoritesPromise.then(function(n){return n.filter(function(n){return n.type===1}).map(function(n){return n.name})})},n.prototype.addFavorite=function(n){return __awaiter(this,void 0,void 0,function(){var t;return __generator(this,function(i){switch(i.label){case 0:return this._favoritesCollection.push(n),[4,this.gitRestClient.createFavorite(e(n),this.projectId)];case 1:return t=i.sent(),n.id=t.id.toString(),[2,n]}})})},n.prototype.removeFavorite=function(n){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(t){switch(t.label){case 0:return this._favoritesCollection.removeAll(function(t){return t.id===n.id}),[4,this.gitRestClient.deleteRefFavorite(this.projectId,parseInt(n.id))];case 1:return t.sent(),[2]}})})},n}();t[n].GitRefFavoritesService=u}("GitRefFavoritesService"),function(n){function l(n,t){return new r(n.concat(t),t.continuationToken)}function a(n){return n.filter(function(n){return d.isBranch(n.name)})}function v(n){return n.headers.get("x-ms-continuationtoken")||undefined}var r,f,s;ft=t[n]={};Object.defineProperty(t,"__esModule",{value:!0});r=function(n){function t(t,i){var r=n.apply(this,t)||this;return r.continuationToken=i,r}return __extends(t,n),t}(Array);t[n].PagedList=r;var e=undefined,u=200,o=function(n){function t(){var i,t=n!==null&&n.apply(this,arguments)||this;return t.myBranchesByRepository={},t.branchesByRepository={},t.tagsByRepository={},t.refsByArea=(i={},i.heads=t.branchesByRepository,i.tags=t.tagsByRepository,i),t.branchesChangedListeners=[],t.tagsChangedListeners=[],t.searchBranches=function(n,i,r,u){return t.searchPagedRefs(n,i,r,"heads",u)},t.searchTags=function(n,i,r,u){return t.searchPagedRefs(n,i,r,"tags",u)},t}return __extends(t,n),t.prototype.getMyBranches=function(n,t){return this.myBranchesByRepository[n]||(this.myBranchesByRepository[n]=this.getGitClient().getRefs(n,t,undefined,!1,!1,!0).then(a)),this.myBranchesByRepository[n]},t.prototype.getPagedBranches=function(n,t){return this.getPagedRefs(n,t,"heads")},t.prototype.getMoreBranches=function(n,t,i){return this.getMoreRefs(n,t,i,"heads")},t.prototype.getPagedTags=function(n,t){return this.getPagedRefs(n,t,"tags")},t.prototype.getMoreTags=function(n,t,i){return this.getMoreRefs(n,t,i,"tags")},t.prototype.invalidateBranchesCache=function(n){var t,i,r;for(delete this.myBranchesByRepository[n],delete this.branchesByRepository[n],t=0,i=this.branchesChangedListeners;t<i.length;t++)r=i[t],r()},t.prototype.registerBranchesChangedListener=function(n){this.branchesChangedListeners.push(n)},t.prototype.unregisterBranchesChangedListener=function(n){var t=this.branchesChangedListeners.indexOf(n);t>=0&&this.branchesChangedListeners.slice(t,1)},t.prototype.invalidateTagsCache=function(n){var t,i,r;for(delete this.tagsByRepository[n],t=0,i=this.tagsChangedListeners;t<i.length;t++)r=i[t],r()},t.prototype.registerTagsChangedListener=function(n){this.tagsChangedListeners.push(n)},t.prototype.unregisterTagsChangedListener=function(n){var t=this.tagsChangedListeners.indexOf(n);t>=0&&this.tagsChangedListeners.slice(t,1)},t.prototype.getPagedRefs=function(n,t,i){return __awaiter(this,void 0,void 0,function(){var r,f;return __generator(this,function(){return r=this.getCachedRefs(i,n),r||(f=this.getRefPaginatedClient(),r=f.getPaginatedRefs(n,t,i,e,u),this.cacheRefs(i,n,r)),[2,r]})})},t.prototype.getMoreRefs=function(n,t,i,f){return __awaiter(this,void 0,void 0,function(){var s,o,c,h;return __generator(this,function(l){switch(l.label){case 0:return(s=this.getCachedRefs(f,n),!s)?[2,this.getPagedRefs(n,t,f)]:[4,s];case 1:return(o=l.sent(),!o.continuationToken||o.continuationToken!==i)?[2,o]:(c=this.getRefPaginatedClient(),h=c.getPaginatedRefs(n,t,f,e,u,o.continuationToken).then(function(n){return new r(o.concat(n),n.continuationToken)}),this.cacheRefs(f,n,h),[2,h])}})})},t.prototype.searchPagedRefs=function(n,t,i,f,e){return __awaiter(this,void 0,void 0,function(){var o,s,h;return __generator(this,function(c){switch(c.label){case 0:return(o=this.getCachedRefs(f,n),!o)?[3,2]:[4,o];case 1:if(s=c.sent(),!s.continuationToken)return h=s.filter(function(n){return n.name.toLowerCase().indexOf(i.toLowerCase())!==-1}),[2,new r(h)];c.label=2;case 2:return[2,this.getRefPaginatedClient().getPaginatedRefs(n,t,f,i,u,e)]}})})},t.prototype.getRefPaginatedClient=function(){return this.pageContext.getRestClient("IPaginatedGitRefRestClient")},t.prototype.getGitClient=function(){return this.pageContext.getRestClient("IGitRestClient")},t.prototype.getCachedRefs=function(n,t){return this.refsByArea[n][t]},t.prototype.cacheRefs=function(n,t,i){this.refsByArea[n][t]=i},t}(i.VssService);t[n].GitRefService=o;i.Services.add("IGitRefService",{serviceFactory:o,options:2});f=function(n){function t(){return n!==null&&n.apply(this,arguments)||this}return __extends(t,n),t.prototype.getPaginatedRefs=function(n,t,i,u,f,e){return __awaiter(this,void 0,void 0,function(){var o,s=this;return __generator(this,function(){return o={filter:i,filterContains:u,$top:f,continuationToken:e},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/git/repositories/{repositoryId}/refs/{*filter}",routeValues:{project:t,repositoryId:n},queryParams:o,returnRawResponse:!0}).then(function(n){return __awaiter(s,void 0,void 0,function(){var t;return __generator(this,function(i){switch(i.label){case 0:return t=r.bind,[4,n.text().then(c.deserializeVssJsonObject)];case 1:return[2,new(t.apply(r,[void 0,i.sent(),v(n)]))]}})})})]})})},t}(h.RestClientBase);t[n].PaginatedGitRefRestClient=f;s="00025394-6065-48ca-87d9-7f5672854ef7";i.RestClients.add("IPaginatedGitRefRestClient",{factory:f,options:{serviceInstanceType:s}})}("GitRefService"),function(n){yt=t[n]={};Object.defineProperty(t,"__esModule",{value:!0});var r=function(n){function t(){var t=n!==null&&n.apply(this,arguments)||this;return t.repositoriesByProject={},t}return __extends(t,n),t.prototype.getAllRepositories=function(n){var t=this.repositoriesByProject[n||""],i;return t||(i=this.pageContext.getRestClient("IGitRestClient"),t=i.getRepositories(n),this.repositoriesByProject[n||""]=t),t},t}(i.VssService);i.Services.add("IGitRepositoryService",{serviceFactory:r})}("GitRepositoryService"),function(n){pt=t[n]={};Object.defineProperty(t,"__esModule",{value:!0});var r=function(n){function t(){return n!==null&&n.apply(this,arguments)||this}return __extends(t,n),t.prototype.loadItems=function(n){var r=this.pageContext.getService("IVCNavigationService"),t=r.getData();if(t){var u=this.pageContext.getService("ITfsPageService"),i=u.getData(),f=i&&i.project?i.project.name:"",e=t.defaultRepoIsGit?t.defaultGitRepoName:"$/"+f,o=t.defaultRepoIsGit?"git":"tfvc-repo",s=t.defaultRepoIsGit?t.defaultGitRepoUrl:r.getRepositoryUrl(null),h=[{key:"vcRepoItem",className:"repo-menu-item",groupKey:"navigation",href:s,name:e,iconProps:{iconName:"",className:"bowtie-icon bowtie-"+o},rank:50}];n(h)}},t}(i.VssService);i.Services.add("code-hub-group-menu-provider",{serviceFactory:r})}("MenuProvider"),function(n){wt=t[n]={};Object.defineProperty(t,"__esModule",{value:!0});var r=function(n){function t(){var t=n!==null&&n.apply(this,arguments)||this;return t.id="vc-mru-route-service",t}return __extends(t,n),t.prototype.routeUrl=function(n,t){var r=this.pageContext.getService("IVssLocationService"),u=this.pageContext.getService("IVssContributionService"),i=u.getData("ms.vss-code-web.versioncontrol-viewmodel-data-provider");return i&&(i.gitRepository?n.vcType="git":i.projectVersionControlInfo&&i.projectVersionControlInfo.supportsTFVC&&(n.vcType="tfvc")),r.routeUrl("ms.vss-code-web.code-redirect",n,t)},t}(i.VssService);i.Services.add("vc-mru-route-service",{serviceFactory:r})}("MruRouteService"),function(n){function i(n,t,i){var r,u;return function(){for(var e=[],f=0;f<arguments.length;f++)e[f]=arguments[f];return r&&(clearTimeout(r),u&&u(i),u=undefined,r=undefined),new Promise(function(i){u=i;r=setTimeout(function(){u=undefined;r=undefined;i(n.apply(null,e))},t)})}}function r(n,t,i){var f,r;return function(e,o){var s=function(){return f=e,r=n(e,o)};return u(e,f)?r.then(function(n){return n&&i(n)?t(e,n):s()}).catch(s):s()}}function u(n,t){return Boolean(n&&t&&n.toLowerCase().indexOf(t.toLowerCase())>=0)}function f(n,t){var i=this;return function(r,u){return __awaiter(i,void 0,void 0,function(){return __generator(this,function(i){switch(i.label){case 0:return[4,t(r)];case 1:return i.sent(),[4,n(r,u)];case 2:return[2,i.sent()]}})})}}function e(n,t){return function(i,r,u){return n[r||t](i,u)}}tt=t[n]={};Object.defineProperty(t,"__esModule",{value:!0});t[n].debouncePromiseFunction=i;t[n].reuseIfStrictlyStronger=r;t[n].createValidator=f;t[n].composeSearchByPivot=e}("UtilsSearch"),function(n){function i(n,t){var i=Date.now();return{publishTime:function(r,u){var f=n.getService("IVssTelemetryService");f.publishEvent(g.VersionControlArea,t,__assign({action:r,elapsedMs:Date.now()-i},u))}}}it=t[n]={};Object.defineProperty(t,"__esModule",{value:!0});t[n].startTelemetryTimer=i}("UtilsTelemetry"),function(n){function u(n,t){var i=n.viewMyBranches,r=n.viewTagsPivot,u=n.viewCommitsPivot;return[{key:"repositoryDefault",name:undefined,pivotId:"branches"},i&&{key:"favorites",name:k.VersionDropdown_MineBranches,pivotId:"branches"},{key:"all-branches",name:k.VersionDropdown_AllBranches,pivotId:"branches",isLoading:t["all-branches"]},r&&{key:"all-tags",name:undefined,pivotId:"tags",isLoading:t["all-tags"]},u&&{key:"found-commits",name:undefined,pivotId:"commits"}].filter(Boolean)}function a(n){var t=n.onCreateBranchClick,i=n.viewTagsPivot,r=n.viewCommitsPivot;return[{id:"branches",name:k.VersionDropdown_PivotBranches,getActions:function(){return v(t)},searchTextPlaceholder:k.VersionDropdown_BranchesSearchTextPlaceholder,searchNoResultsText:k.VersionDropdown_BranchesSearchNoResultsText},i&&{id:"tags",name:k.VersionDropdown_PivotTags,searchTextPlaceholder:k.VersionDropdown_TagsSearchTextPlaceholder,searchNoResultsText:k.VersionDropdown_TagsSearchNoResultsText,noItemsText:k.VersionDropdown_TagsNoItemsText},r&&{id:"commits",name:k.VersionDropdown_PivotCommits,searchTextPlaceholder:k.VersionDropdown_CommitsSearchTextPlaceholder,searchNoResultsText:k.VersionDropdown_CommitsSearchNoResultsText,noItemsText:k.VersionDropdown_CommitsSearchMinimumCharactersError},].filter(Boolean)}function v(n){return n?[{name:k.VersionDropdown_NewBranch,iconProps:{iconName:"Add"},onClick:function(){return n()}}]:[]}function f(n,t,i,r){var u=d.getFriendlyName(n.name),f=d.isTag(n.name);return{refName:n.name,friendlyName:u,versionString:f?d.getVersionFromTagName(u):d.getVersionFromBranchName(u),kind:f?"tag":"branch",isMine:n.creator.id===i,isDefault:n.name===t.defaultBranch,isFavoritedByFolder:!f&&y(n.name,r),repositoryId:t.id}}function y(n,t){return t.some(function(t){return n.startsWith(t+"/")})}function p(n,t){return{refName:n.commitId,friendlyName:d.getShortCommitId(n.commitId)+" "+n.comment,versionString:d.getVersionFromCommitHash(n.commitId),kind:"commit",repositoryId:t.id}}function e(n,t,i){return!n||n.length>=i?n:n+Array(i-n.length+1).join(t)}function w(n,t){var f;if(n){var r=n.substring(0,2)==="GT",u=n.substring(0,2)==="GC",i=n.substring(2);return u&&(i=d.getShortCommitId(i)),f=d.getFriendlyName(t.defaultBranch),{refName:r?d.getRefNameFromTagName(i):d.getRefNameFromBranchName(i),friendlyName:i,versionString:n,kind:u?"commit":r?"tag":"branch",isDefault:i===f,repositoryId:t.id}}}function b(n){var t=n.kind==="branch"&&!n.isDefault&&!n.isMine;return t?{artifactId:n.refName,artifactName:n.friendlyName,artifactScope:{id:n.repositoryId,type:nt.GitRefFavoriteArtifactConstants.artifactScopeType},artifactType:nt.GitRefFavoriteArtifactConstants.artifactType}:undefined}function g(n){return n.kind==="commit"?"found-commits":n.kind==="tag"?"all-tags":n.isDefault?"repositoryDefault":n.isMine||n.isFavoritedByFolder?"favorites":"all-branches"}function rt(n,t){return n.friendlyName.localeCompare(t.friendlyName)}function ut(n){if(!n||n.length<o)throw new Error(k.VersionDropdown_CommitsSearchMinimumCharactersError);if(!s.test(n))throw new Error(k.VersionDropdown_CommitsSearchWrongCharactersError);}function ot(n,t){return t.filter(function(t){return t.refName.startsWith(n)})}function st(n,t){return t.filter(function(t){return t.friendlyName.toLowerCase().indexOf(n.toLowerCase())!==-1})}function ht(n){return n.length<=r}function ct(n){return!n.continuationToken}function lt(n,t,i){var r=i.kind==="commit"?i.refName:t.name;return r.toLowerCase().indexOf(n.toLowerCase())!==-1}et=t[n]={};Object.defineProperty(t,"__esModule",{value:!0});var o=4,r=10,s=/^[0-9a-f]+$/i,i="RepositoryPickerProvider",h="!",c=function(n){function t(t,o){var c,s=n.call(this)||this,l,y;s.pageContext=t;s.options=o;s._continuationTokens={};s.minItemsForSearchBox=0;s.getPickListItems=function(n){return n===void 0&&(n="all-branches"),__awaiter(s,void 0,void 0,function(){var s,t,r,h,o,e,c=this;return __generator(this,function(l){switch(l.label){case 0:return s=it.startTelemetryTimer(this.pageContext,i),[4,this.getRefs(n)];case 1:return(t=l.sent(),this._continuationTokens[n]=t.continuationToken,t.continuationToken||(r=this.getGroupsLoadingState(),r[n]&&(r[n]=!1,this._artifactPickerOptions.groups=u(this.options,r))),!this.options.viewMyBranches)?[3,3]:[4,this._gitRefFavoritesService.getCurrentFolderFavorites()];case 2:return o=l.sent(),[3,4];case 3:o=[];l.label=4;case 4:return h=o,e=t.map(function(n){return f(n,c.options.repository,c.options.currentIdentityId,h)}),this.selectedItem&&this.selectedItem.kind==="commit"&&e.push(this.selectedItem),s.publishTime("getPickListItems",{groupKey:n,count:e.length,hasMore:Boolean(t.continuationToken)}),[2,e]}})})};s.searchCommits=function(n){return __awaiter(s,void 0,void 0,function(){var f,o,t,s,h,c,u,l=this;return __generator(this,function(a){switch(a.label){case 0:return f=it.startTelemetryTimer(this.pageContext,i),o=this.pageContext.getRestClient("IGitRestClient"),t=this.options.repository,s=t.id,h=t.project.id,[4,o.getCommitsBatch({fromCommitId:e(n,"0",40),toCommitId:e(n,"F",40)},s,h,0,r+1)];case 1:return c=a.sent(),u=c.map(function(n){return p(n,l.options.repository)}),f.publishTime("searchCommits",{count:u.length}),[2,u]}})})};s.searchBranchRefs=function(n,t){return s.searchRefs(n,t,"all-branches",s.getGitRefService().searchBranches)};s.searchTagRefs=function(n,t){return s.searchRefs(n,t,"all-tags",s.getGitRefService().searchTags)};var k={artifactType:nt.GitRefFavoriteArtifactConstants.artifactType,artifactScope:{id:o.repository.id,name:o.repository.name,type:nt.GitRefFavoriteArtifactConstants.artifactScopeType}},d={branch:"tfvc-branch",tag:"tag",commit:"tfvc-commit"},v,h=a(o);return h&&h.length===1&&(l=h[0].getActions,v=l&&l([]),h=undefined),y=o.repository.project.id,s._gitRefFavoritesService=s.getGitRefFavoritesService(y,o.viewMyBranches),s._artifactPickerOptions={pageContext:t,favoritesContext:k,favoritesService:s._gitRefFavoritesService,onArtifactClicked:function(n){return o.onVersionSelected&&o.onVersionSelected(n.versionString)},selectedArtifact:w(o.selectedVersionString,o.repository),hideFavoriteSelectedItemIndicator:!0,getArtifacts:s.getPickListItems,getArtifactId:function(n){return n.refName},getArtifactName:function(n){return n.friendlyName},getArtifactIcon:function(n){return{iconType:1,iconName:d[n.kind]}},getFavoriteFromArtifact:b,getArtifactListGroupId:g,artifactComparer:rt,groups:u(o,(c={},c["all-branches"]=!0,c["all-tags"]=!0,c)),pivots:h,otherActions:v,limitSearchToPivot:!0,getSearchResults:s.createSearchFunction(),getSearchResultsContinuationToken:function(n){return n.continuationToken},onFilterItemByText:lt},s.initialize(s._artifactPickerOptions),s.getGitRefService().registerBranchesChangedListener(s.forgetCachedArtifacts),s}return __extends(t,n),t.prototype.dispose=function(){n.prototype.dispose.call(this);this.getGitRefService().unregisterBranchesChangedListener(this.forgetCachedArtifacts)},t.prototype.getRefs=function(n){var r=this._continuationTokens[n],u=this.options.repository,t=u.id,i=u.project.id;return r?n==="all-tags"?this.getGitRefService().getMoreTags(t,i,r):this.getGitRefService().getMoreBranches(t,i,r):n==="all-tags"?this.getGitRefService().getPagedTags(t,i):this.options.viewMyBranches?this.getMyBranches():this.getGitRefService().getPagedBranches(t,i)},t.prototype.getMyBranches=function(){var n=this.options.repository,t=n.id,i=n.project.id;return this.getGitRefService().getMyBranches(t,i).then(function(n){return new ft.PagedList(n,h)})},t.prototype.getGitRefFavoritesService=function(n,t){var i=this.pageContext.getService("IFavoritesService"),r=this.pageContext.getRestClient("IGitRestClient");return new nt.GitRefFavoritesService(r,t&&i.canUseFavorites(),n)},t.prototype.getGitRefService=function(){return this.pageContext.getService("IGitRefService")},t.prototype.createSearchFunction=function(){var n,r=this,f=1e3,t=function(n){return tt.debouncePromiseFunction(n,f,[])},i=function(n){return function(t,i){return n(t&&t.trim(),i)}},e=function(n){return function(t,i){return r.isGroupFullyLoaded("all-branches")?Promise.resolve(undefined):n(t,i)}},o=function(n){return function(t,i){return r.isGroupFullyLoaded("all-tags")?Promise.resolve(undefined):n(t,i)}},u=function(n){return tt.reuseIfStrictlyStronger(n,st,ct)},s=function(n){return tt.createValidator(n,ut)},h=function(n){return tt.reuseIfStrictlyStronger(n,ot,ht)};return tt.composeSearchByPivot((n={},n.branches=e(i(u(t(this.searchBranchRefs)))),n.tags=o(i(u(t(this.searchTagRefs)))),n.commits=i(s(h(t(this.searchCommits)))),n),"branches")},t.prototype.searchRefs=function(n,t,r,u){return __awaiter(this,void 0,void 0,function(){var h,o,c,l,e,s,a=this;return __generator(this,function(v){switch(v.label){case 0:return h=it.startTelemetryTimer(this.pageContext,i),t||(t=this._continuationTokens[r]),o=this.options.repository,c=o.id,l=o.project.id,[4,u(c,l,n,t)];case 1:return e=v.sent(),s=e.map(function(n){return f(n,a.options.repository,a.options.currentIdentityId,[])}),h.publishTime("searchRefs",{count:s.length,hasMore:Boolean(e.continuationToken)}),[2,new ft.PagedList(s,e.continuationToken)]}})})},t.prototype.getGroupsLoadingState=function(){return this._artifactPickerOptions&&this._artifactPickerOptions.groups?this._artifactPickerOptions.groups.reduce(function(n,t){var i;return __assign({},n,(i={},i[t.key]=t.isLoading,i))},{}):{}},t.prototype.isGroupFullyLoaded=function(n){return!this.getGroupsLoadingState()[n]},t}(l.ArtifactPickerProviderBase);t[n].VersionDropdownProvider=c}("ProvidersVersionDropdownProvider"),function(n){function e(n){return{name:n.name,id:n.id,repository:n,isFork:n.isFork,isTfvc:!1}}rt=t[n]={};Object.defineProperty(t,"__esModule",{value:!0});var i="Microsoft.TeamFoundation.Git.Repository",u="RepositoryPickerProvider",o=function(n){function t(t,o){var s=n.call(this)||this,v,w;s.minItemsForSearchBox=0;s.getPickListItems=function(){if(!s.itemsPromise){var n=it.startTelemetryTimer(s.pageContext,u),t=s.pageContext.getService("IGitRepositoryService");s.itemsPromise=t.getAllRepositories(s.projectId).then(function(t){var i=t.map(e);return i.sort(function(n,t){return f.localeIgnoreCaseComparer(n.name,t.name)}),s.supportsTfvc&&i.unshift({name:"$/"+s.projectName,isTfvc:!0,id:"tfvc",isFork:!1}),n.publishTime("getAllRepositories"),i})}return s.itemsPromise};s.onSelectedItemChanged=function(n){s.setSelectedItem(n);var t=s.artifactPickerOptions,i=t.onArtifactClicked,f=t.getArtifactHref;if(i)return i(n);if(f&&r.isFeatureEnabled(s.pageContext,"ms.vss-tfs-web.vertical-navigation",!1))return a.onClickFPS(s.pageContext,f(n),!0,undefined,{telemetrySource:u})};var b=o.actions,d=o.getItemHref,y=o.getRepositories,g=o.onRepositorySelected,nt=o.selectedRepositoryIsTfvc,tt=o.selectedRepositoryIsFork,rt=o.selectedRepositoryId,c=o.selectedRepositoryName,ut=o.supportsTfvc,h=o.projectName,l=o.projectId,ft=o.defaultGroupHeader,et=o.favoriteGroupHeader,p=o.showFavoritesEarly,ot=p===void 0?!0:p;return s.pageContext=t,s.projectId=l,s.projectName=h,s.supportsTfvc=ut,y&&(s.itemsPromise=y().then(function(n){return n.map(e)})),nt?v={name:"$/"+h,isTfvc:!0,id:"tfvc",isFork:!1}:c&&(v={name:c,isTfvc:!1,id:rt||c,isFork:!!tt}),w=h&&l?{artifactType:i,artifactScope:{id:l,name:h,type:"Project"}}:{artifactType:i,artifactScope:{id:"",name:"",type:"Collection"}},s.artifactPickerOptions={pageContext:t,favoritesContext:w,onArtifactClicked:g,selectedArtifact:v,defaultGroupHeader:ft,favoriteGroupHeader:et,hideFavoriteSelectedItemIndicator:!0,getArtifacts:s.getPickListItems,getArtifactId:function(n){return n.id},getArtifactName:function(n){return n.name},getArtifactHref:d,getArtifactIcon:function(n){return{iconType:1,iconName:n.isTfvc?"tfvc-repo":n.isFork?"git-fork":"git"}},getArtifactFromFavorite:ot?function(n){return{name:n.artifactName,id:n.artifactId,isTfvc:!1,isFork:!1}}:undefined,getFavoriteFromArtifact:function(n){return n.repository?{artifactId:n.repository.id,artifactName:n.repository.name,artifactScope:{id:n.repository.project.id,name:n.repository.project.name,type:"Project"},artifactType:i}:undefined},artifactComparer:function(n,t){return n.name.localeCompare(t.name)},otherActions:b,searchTextPlaceholder:k.SearchRepositoriesWatermark},s.initialize(s.artifactPickerOptions),s}return __extends(t,n),t.prototype._loadFavorites=function(t){return t===void 0&&(t=!1),__awaiter(this,void 0,void 0,function(){var r,i;return __generator(this,function(f){switch(f.label){case 0:return r=it.startTelemetryTimer(this.pageContext,u),[4,n.prototype._loadFavorites.call(this,t)];case 1:return i=f.sent(),i&&r.publishTime("loadFavorites",{includeExtendedData:t}),[2,i]}})})},t}(l.ArtifactPickerProviderBase);t[n].RepositoryPickerProvider=o}("RepositoryPickerProvider"),function(n){bt=t[n]={};Object.defineProperty(t,"__esModule",{value:!0});var r=function(n){function t(t){return n.call(this,t)||this}return __extends(t,n),t.prototype.getBranch=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){var u;return __generator(this,function(){return u={path:n,includeParent:i,includeChildren:r},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/tfvc/Branches/{*path}",routeValues:{project:t},queryParams:u})]})})},t.prototype.getBranches=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){var f;return __generator(this,function(){return f={includeParent:t,includeChildren:i,includeDeleted:r,includeLinks:u},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/tfvc/Branches/{*path}",routeValues:{project:n},queryParams:f})]})})},t.prototype.getBranchRefs=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){var u;return __generator(this,function(){return u={scopePath:n,includeDeleted:i,includeLinks:r},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/tfvc/Branches/{*path}",routeValues:{project:t},queryParams:u})]})})},t.prototype.getChangesetChanges=function(n,t,i){return __awaiter(this,void 0,void 0,function(){var r;return __generator(this,function(){return r={$skip:t,$top:i},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/tfvc/changesets/{id}/changes",routeValues:{id:n},queryParams:r})]})})},t.prototype.createChangeset=function(n,t){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.3",method:"POST",routeTemplate:"{project}/_apis/tfvc/changesets/{id}",routeValues:{project:t},body:n})]})})},t.prototype.getChangeset=function(n,t,i,r,u,f,e,o,s,h,c){return __awaiter(this,void 0,void 0,function(){var l;return __generator(this,function(){return l={maxChangeCount:i,includeDetails:r,includeWorkItems:u,maxCommentLength:f,includeSourceRename:e,$skip:o,$top:s,$orderby:h,searchCriteria:c},[2,this.beginRequest({apiVersion:"5.0-preview.3",routeTemplate:"{project}/_apis/tfvc/changesets/{id}",routeValues:{project:t,id:n},queryParams:l})]})})},t.prototype.getChangesets=function(n,t,i,r,u,f){return __awaiter(this,void 0,void 0,function(){var e;return __generator(this,function(){return e={maxCommentLength:t,$skip:i,$top:r,$orderby:u,searchCriteria:f},[2,this.beginRequest({apiVersion:"5.0-preview.3",routeTemplate:"{project}/_apis/tfvc/changesets/{id}",routeValues:{project:n},queryParams:e})]})})},t.prototype.getBatchedChangesets=function(n){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"_apis/tfvc/ChangesetsBatch",body:n})]})})},t.prototype.getChangesetWorkItems=function(n){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/tfvc/changesets/{id}/workItems",routeValues:{id:n}})]})})},t.prototype.getItemsBatch=function(n,t){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/tfvc/ItemBatch",routeValues:{project:t},body:n})]})})},t.prototype.getItemsBatchZip=function(n,t){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(){return[2,this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",httpResponseType:"application/zip",routeTemplate:"{project}/_apis/tfvc/ItemBatch",routeValues:{project:t},body:n})]})})},t.prototype.getItem=function(n,t,i,r,u,f,e,o){return __awaiter(this,void 0,void 0,function(){var s;return __generator(this,function(){return s={path:n,fileName:i,download:r,scopePath:u,recursionLevel:f,versionDescriptor:e,includeContent:o},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/tfvc/Items/{*path}",routeValues:{project:t},queryParams:s})]})})},t.prototype.getItemContent=function(n,t,i,r,u,f,e,o){return __awaiter(this,void 0,void 0,function(){var s;return __generator(this,function(){return s={path:n,fileName:i,download:r,scopePath:u,recursionLevel:f,versionDescriptor:e,includeContent:o},[2,this.beginRequest({apiVersion:"5.0-preview.1",httpResponseType:"application/octet-stream",routeTemplate:"{project}/_apis/tfvc/Items/{*path}",routeValues:{project:t},queryParams:s})]})})},t.prototype.getItems=function(n,t,i,r,u){return __awaiter(this,void 0,void 0,function(){var f;return __generator(this,function(){return f={scopePath:t,recursionLevel:i,includeLinks:r,versionDescriptor:u},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/tfvc/Items/{*path}",routeValues:{project:n},queryParams:f})]})})},t.prototype.getItemText=function(n,t,i,r,u,f,e,o){return __awaiter(this,void 0,void 0,function(){var s;return __generator(this,function(){return s={path:n,fileName:i,download:r,scopePath:u,recursionLevel:f,versionDescriptor:e,includeContent:o},[2,this.beginRequest({apiVersion:"5.0-preview.1",httpResponseType:"text/plain",routeTemplate:"{project}/_apis/tfvc/Items/{*path}",routeValues:{project:t},queryParams:s})]})})},t.prototype.getItemZip=function(n,t,i,r,u,f,e,o){return __awaiter(this,void 0,void 0,function(){var s;return __generator(this,function(){return s={path:n,fileName:i,download:r,scopePath:u,recursionLevel:f,versionDescriptor:e,includeContent:o},[2,this.beginRequest({apiVersion:"5.0-preview.1",httpResponseType:"application/zip",routeTemplate:"{project}/_apis/tfvc/Items/{*path}",routeValues:{project:t},queryParams:s})]})})},t.prototype.getLabelItems=function(n,t,i){return __awaiter(this,void 0,void 0,function(){var r;return __generator(this,function(){return r={$top:t,$skip:i},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/tfvc/labels/{labelId}/items",routeValues:{labelId:n},queryParams:r})]})})},t.prototype.getLabel=function(n,t,i){return __awaiter(this,void 0,void 0,function(){var r;return __generator(this,function(){return r={requestData:t},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/tfvc/Labels/{labelId}",routeValues:{project:i,labelId:n},queryParams:r})]})})},t.prototype.getLabels=function(n,t,i,r){return __awaiter(this,void 0,void 0,function(){var u;return __generator(this,function(){return u={requestData:n,$top:i,$skip:r},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/tfvc/Labels/{labelId}",routeValues:{project:t},queryParams:u})]})})},t.prototype.getShelvesetChanges=function(n,t,i){return __awaiter(this,void 0,void 0,function(){var r;return __generator(this,function(){return r={shelvesetId:n,$top:t,$skip:i},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/tfvc/shelvesets/changes",queryParams:r})]})})},t.prototype.getShelveset=function(n,t){return __awaiter(this,void 0,void 0,function(){var i;return __generator(this,function(){return i={shelvesetId:n,requestData:t},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/tfvc/shelvesets",queryParams:i})]})})},t.prototype.getShelvesets=function(n,t,i){return __awaiter(this,void 0,void 0,function(){var r;return __generator(this,function(){return r={requestData:n,$top:t,$skip:i},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/tfvc/shelvesets",queryParams:r})]})})},t.prototype.getShelvesetWorkItems=function(n){return __awaiter(this,void 0,void 0,function(){var t;return __generator(this,function(){return t={shelvesetId:n},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/tfvc/shelvesets/workitems",queryParams:t})]})})},t.prototype.getTfvcStatistics=function(n,t){return __awaiter(this,void 0,void 0,function(){var i;return __generator(this,function(){return i={scopePath:t},[2,this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/tfvc/stats",routeValues:{project:n},queryParams:i})]})})},t}(h.RestClientBase);i.RestClients.add("ITfvcRestClient",{factory:r,options:{serviceInstanceType:"00025394-6065-48ca-87d9-7f5672854ef7"}})}("RestClientTfvc"),function(n){function i(n){if(!n)return!1;var t=new Date;return Math.abs(t.getTime()-n.getTime())/36e5<24}function r(n,t,i){return(i===void 0&&(i=!1),!n)?"":t?v.ago(n):i?n.toLocaleDateString():n.toLocaleString()}kt=t[n]={};Object.defineProperty(t,"__esModule",{value:!0});t[n].isDateRecent=i;t[n].getDateString=r}("UtilsDate"),function(n){ot=t[n]={};Object.defineProperty(t,"__esModule",{value:!0});var i=function(n){function t(t,i){var r=n.call(this,t,i)||this;return r.pickerProvider=new rt.RepositoryPickerProvider(i.pageContext,t.providerOptions),r}return __extends(t,n),t.prototype.render=function(){var n=this.props,t=n.className,i=n.tabIndex,r=n.hideSelectedItemIcon,u=n.dropdownIconProps;return e.createElement(w.ItemPickerDropdown,{provider:this.pickerProvider,className:y.css("repository-selector",t),tabIndex:i,pickListClassName:"repository-selector-dropdown",hideSelectedItemIcon:r,dropdownIconProps:u})},t.prototype.componentDidMount=function(){n.prototype.componentDidMount.call(this);this.props.componentRef&&this.props.componentRef(this)},t.prototype.componentWillReceiveProps=function(n){n.providerOptions!==this.props.providerOptions&&(this.pickerProvider=new rt.RepositoryPickerProvider(this.context.pageContext,n.providerOptions))},t}(p.VssComponent);t[n].RepositoryDropdownComponent=i}("ComponentsRepositoryDropdown"),function(n){dt=t[n]={};Object.defineProperty(t,"__esModule",{value:!0});var i=function(n){function t(t,i){var r=n.call(this,t,i)||this;return r.onFpsCompleted=function(){r.initializeData(r.props,r.context);r.forceUpdate()},r.initializeData(t,i),r}return __extends(t,n),t.prototype.render=function(){return this.vcData&&this.projectName?e.createElement(b.CommandBarExpandableComponent,__assign({},this.props,{calloutId:this.props.expanded?"dropdown"+this.componentId:undefined,className:p.css("commandbar-item-menu",this.props.className),expandOnHover:!1,id:"cmec"+this.componentId,noTabIndex:!0}),e.createElement(ot.RepositoryDropdownComponent,{className:"command-bar-repository-selector",id:"dropdown"+this.componentId,tabIndex:this.props.selected?0:-2,hideSelectedItemIcon:this.props.hideIcon,dropdownIconProps:this.props.useSmallDropdownIcon?{iconName:"ChevronDownSmall"}:undefined,providerOptions:{actions:this.getActions(),getItemHref:this.getItemHref,projectName:this.projectName,projectId:this.projectId,selectedRepositoryId:this.vcData.defaultRepoId||"tfvc",selectedRepositoryName:this.vcData.defaultGitRepoName,selectedRepositoryIsTfvc:!this.vcData.defaultRepoIsGit,selectedRepositoryIsFork:this.vcData.defaultRepoIsFork,supportsTfvc:this.vcData.supportsTfvc}})):null},t.prototype.componentDidMount=function(){n.prototype.componentDidMount.call(this);this.addEventListener(document.body,"fpsCompleted",this.onFpsCompleted)},t.prototype.initializeData=function(n,t){var e=t.pageContext.getService("IVCNavigationService"),f,i,r,u;this.vcData=e.getData();f=t.pageContext.getService("ITfsPageService");i=f.getData();i&&i.project?(this.projectName=i.project.name,this.projectId=i.project.id,r=t.pageContext.getService("IVssSecurityService"),u="repoV2/"+this.projectId+"/",this.canCreateRepositories=r.hasPermission(g.GitConstants.GitSecurityNamespaceId,u,256),this.canManageRepositories=r.hasPermission(g.GitConstants.GitSecurityNamespaceId,u,1024)||r.hasPermission(g.GitConstants.GitSecurityNamespaceId,u,512)||r.hasPermission(g.GitConstants.GitSecurityNamespaceId,u,8192),this.favoritesContext={artifactType:"Microsoft.TeamFoundation.Git.Repository",artifactScope:{id:i.project.id,name:i.project.name,type:"Project"}}):(this.projectName=undefined,this.projectId=undefined,this.favoritesContext=undefined)},t.prototype.hasFocus=function(){return!1},t.prototype.getActions=function(){var t=this,n=[],i;return this.canCreateRepositories&&(n.push({name:k.NewRepository,iconProps:{iconName:"Add"},onClick:function(){var n=t.context.pageContext.getService("IVssLayoutManager");n.renderCallout(function(n){return e.createElement(o.LegacyComponent,{modules:["VersionControl/Scripts/Components/HeaderComponents/HeaderComponents"],wrappedType:"newRepositoryDialog",onClose:function(){n()},isOverviewHubEnabled:ut.FeatureFlags.isRepositoryOverviewHubEnabled(t.context.pageContext)},null)})}}),n.push({name:k.ImportRepository,iconProps:{iconName:"Upload"},onClick:function(){var n=t.context.pageContext.getService("IVssLayoutManager");n.renderCallout(function(n){return e.createElement(o.LegacyComponent,{modules:["VersionControl/Scripts/Components/HeaderComponents/HeaderComponents"],wrappedType:"importRepositoryDialog",onClose:function(){n()}},null)})}})),this.canManageRepositories&&(i=u.routeUrl(this.context.pageContext,"ms.vss-code-web.admin-version-control-route",{project:this.projectName}),n.push({name:k.ManageRepositories,iconProps:{iconName:"Settings"},href:i})),n},t.prototype.getItemHref=function(n){var t=this.context.pageContext.getService("IVCNavigationService");return t.getRepositoryUrl(n.isTfvc?null:n.name)},__decorate([y.autobind],t.prototype,"getActions",null),__decorate([y.autobind],t.prototype,"getItemHref",null),t}(p.VssComponent);p.Components.add("navigation-repository-selector",i)}("ComponentsCommandBarRepositorySelector"),function(n){gt=t[n]={};Object.defineProperty(t,"__esModule",{value:!0});var i=function(n){function t(){return n!==null&&n.apply(this,arguments)||this}return __extends(t,n),t.prototype.render=function(){return e.createElement(b.CommandBarChildComponent,__assign({},this.props,{noTabIndex:!0}),e.createElement(o.LegacyComponent,{key:this.props.wrappedComponentType,wrappedType:this.props.wrappedComponentType,modules:["VersionControl/Scripts/Components/HeaderComponents/HeaderComponents"],selected:this.props.selected}))},t.componentType="versionControlActionHeader",t}(p.VssComponent);p.VssComponent.register(i.componentType,i)}("ComponentsHeaderComponents"),function(n){ni=t[n]={};Object.defineProperty(t,"__esModule",{value:!0});var i=function(n){function t(t,i){var r=n.call(this,t,i)||this;return r.pickerProvider=new rt.RepositoryPickerProvider(i.pageContext,t.providerOptions),r}return __extends(t,n),t.prototype.render=function(){var n=this.props,t=n.className,i=n.useDropdownStyle;return e.createElement(w.ItemPickList,{provider:this.pickerProvider,className:y.css("repository-list",t)})},t.prototype.componentDidMount=function(){n.prototype.componentDidMount.call(this);this.props.componentRef&&this.props.componentRef(this)},t.prototype.componentWillReceiveProps=function(n){n.providerOptions!==this.props.providerOptions&&(this.pickerProvider=new rt.RepositoryPickerProvider(this.context.pageContext,n.providerOptions))},t}(p.VssComponent);t[n].RepositoryListComponent=i}("ComponentsRepositoryList"),function(n){function r(n,t){var i=t.kind==="commit"?{lastName:n.name}:u(n.name),r=i.prefix,f=i.lastName;return e.createElement("span",null,r&&e.createElement("span",{className:"prefix-name"},r),f,t.isDefault&&e.createElement("span",{className:"default-badge"},k.VersionDropdown_DefaultBadge))}function u(n){var t=n.lastIndexOf("/");return t>0?{prefix:n.substring(0,t+1),lastName:n.substring(t+1)}:{lastName:n}}ti=t[n]={};Object.defineProperty(t,"__esModule",{value:!0});var i=function(n){function t(t,i){var r=n.call(this,t,i)||this;return r.provider=new et.VersionDropdownProvider(i.pageContext,t.providerOptions),r}return __extends(t,n),t.prototype.render=function(){var n=this.props,t=n.className,i=n.tabIndex,u=n.hideSelectedItemIcon,f=n.dropdownIconProps,o=n.isOpen,s=n.autoFocus,h=n.isDrodownFullWidth,c=n.placeholderText,l=n.onToggleDropdown;return e.createElement(w.ItemPickerDropdown,{provider:this.provider,className:y.css("version-selector",t),tabIndex:i,pickListClassName:"version-selector-dropdown",hideSelectedItemIcon:u,dropdownIconProps:f,pickListWidth:h?undefined:350,isOpen:o,autoFocus:s,placeholderText:c,onRenderItemText:r,onToggleDropdown:l})},t.prototype.componentDidMount=function(){n.prototype.componentDidMount.call(this);this.props.componentRef&&this.props.componentRef(this)},t.prototype.componentWillReceiveProps=function(n){y.shallowCompare(n.providerOptions,this.props.providerOptions)||(this.provider=new et.VersionDropdownProvider(this.context.pageContext,n.providerOptions))},t}(p.VssComponent);t[n].VersionDropdown=i}("ComponentsVersionDropdown")},["Resources","Contracts/Constants","Contracts/EnumToString","Navigation","Helpers","CreateMenuProvider","Flux/Action","Flux/Store","RestClient/Git","Utils/Ref","GitRefFavoritesService","GitRefService","GitRepositoryService","MenuProvider","MruRouteService","Utils/Search","Utils/Telemetry","Providers/VersionDropdownProvider","RepositoryPickerProvider","RestClient/Tfvc","Utils/Date","Components/RepositoryDropdown","Components/CommandBarRepositorySelector","Components/HeaderComponents","Components/RepositoryList","Components/VersionDropdown"]);document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-code-web.common-content"}}));